.. _nmappage:


Nmap (Zenmap)
=============

.. note::

    To use Nmap with GUI, you can use `Zenmap <https://nmap.org/zenmap/>`_.

Nmap_ (Network Mapper) is an open source tool for network exploration and security auditing.
It was designed to **rapidly scan large networks**, although it works fine against single hosts.

Nmap_ uses raw IP packets in novel ways to determine dozens of characteristics, such as:
- what hosts are available on the network
- what services (application name and version) those hosts are offering
- what operating systems (and OS versions) they are running
- what type of packet filters/firewalls are in use

While Nmap_ is commonly used for security audits, many systems and network administrators find it useful for routine tasks such as **network inventory**, **managing service upgrade schedules**, and **monitoring host or service uptime**.

Usage
-----
To scan one (or several) target(s), we can use the command

.. code-block:: console

	nmap [SCAN TYPE] [OPTIONS] [TARGET SPECIFICATION] 

.. note::

	To scan a range of targets / networks, we can either determine the network address, or use the wildcard ``*``.

.. note::
	
	Some Nmap_ operation requires root privileges.

Example
-------

Scanning for Available Hosts
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To scan the network ``192.168.233.0/24``, we can use the command

.. code-block:: console

	nmap 192.168.233.0/24

.. code-block:: console

	> nmap 192.168.233.0/24

	Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-21 22:35 EDT
	Nmap scan report for 192.168.233.1
	Host is up (0.00016s latency).
	All 1000 scanned ports on 192.168.233.1 are in ignored states.
	Not shown: 1000 filtered tcp ports (no-response)
	MAC Address: 00:50:56:C0:00:08 (VMware)

	Nmap scan report for 192.168.233.2
	Host is up (0.0013s latency).
	All 1000 scanned ports on 192.168.233.2 are in ignored states.
	Not shown: 1000 closed tcp ports (reset)
	MAC Address: 00:50:56:F6:D5:14 (VMware)

	Nmap scan report for 192.168.233.254
	Host is up (0.00052s latency).
	All 1000 scanned ports on 192.168.233.254 are in ignored states.
	Not shown: 1000 filtered tcp ports (no-response)
	MAC Address: 00:50:56:E5:53:87 (VMware)

	Nmap scan report for 192.168.233.131
	Host is up (0.000011s latency).
	Not shown: 999 closed tcp ports (reset)
	PORT   STATE SERVICE
	22/tcp open  ssh

	Nmap done: 256 IP addresses (4 hosts up) scanned in 34.70 seconds

From the scan result, we can see that there are 4 hosts online and connected to the network.

Scanning Host Operating System
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To scan ``192.168.233.131``'s operating system version, we can use the command

.. code-block:: console

	nmap -O 192.168.233.131

.. code-block:: console

	> nmap -O 192.168.233.131

	Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-21 22:43 EDT
	Nmap scan report for 192.168.233.131
	Host is up (0.000079s latency).
	Not shown: 999 closed tcp ports (reset)
	PORT   STATE SERVICE
	22/tcp open  ssh
	Device type: general purpose
	Running: Linux 2.6.X
	OS CPE: cpe:/o:linux:linux_kernel:2.6.32
	OS details: Linux 2.6.32
	Network Distance: 0 hops

	OS detection performed. Please report any incorrect results at https://nmap.org/submit/ .
	Nmap done: 1 IP address (1 host up) scanned in 14.83 seconds

From the scan result, we can see that ``192.168.233.131`` runs on Linux.

.. important::
	
	Nmap_ OS scan results might not 100% accurate. This is because Nmap scans for TCP/IP stack fingerprinting, where Nmap_ sends a series of TCP and UDP packets to the remote host and examines practically every bit in the responses. These fingerprints, while they are well documented, can sometimes be spoofed, or even unrecognised.

Enumerating Host Service Version
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
To scan ``192.168.233.131``'s services (and its versions), we can use the command

.. code-block:: console

	nmap -p - -sV 192.168.233.131

.. code-block:: console

	> nmap -p - -sV 192.168.233.131

	Starting Nmap 7.92 ( https://nmap.org ) at 2022-06-21 22:40 EDT
	Nmap scan report for 192.168.233.131
	Host is up (0.000056s latency).
	Not shown: 65534 closed tcp ports (conn-refused)
	PORT   STATE SERVICE VERSION
	22/tcp open  ssh     OpenSSH 9.0p1 Debian 1 (protocol 2.0)
	Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel

	Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .
	Nmap done: 1 IP address (1 host up) scanned in 14.41 seconds

From the scan result, we can see that there is 1 service ``OpenSSH 9.0p1`` running in ``port 22``.

.. note::

	The argument ``-p -`` is used to scan the whole range of ports ``0 - 65535``, while ``-sV`` is used to list the service versions.

Options
-------

TARGET SPECIFICATION
~~~~~~~~~~~~~~~~~~~~
-iL <*inputfilename*>
^^^^^^^^^^^^^^^^^^^^^
    Input from list of hosts/networks


-iR <*num hosts*>
^^^^^^^^^^^^^^^^^
    Choose random targets

--exclude <*host1[,host2][,host3],...*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Exclude hosts/networks

--excludefile <*exclude_file*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Exclude list from file

HOST DISCOVERY
~~~~~~~~~~~~~~
-sL
^^^
    List Scan - simply list targets to scan

-sn
^^^
    Ping Scan - disable port scan

-Pn
^^^
    Treat all hosts as online -- skip host discovery

-PS / -PA / -PU / -PY <*[portlist]*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    TCP SYN/ACK, UDP or SCTP discovery to given ports

-PE / -PP / -PM
^^^^^^^^^^^^^^^
    ICMP echo, timestamp, and netmask request discovery probes

-PO <*[protocol list]*>
^^^^^^^^^^^^^^^^^^^^^^^
    IP Protocol Ping

-n / -R
^^^^^^^
    Never do DNS resolution/Always resolve [default: sometimes]

--dns-servers <*serv1[,serv2],...*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Specify custom DNS servers

--system-dns
^^^^^^^^^^^^
    Use OS's DNS resolver

--traceroute
^^^^^^^^^^^^
    Trace hop path to each host

SCAN TECHNIQUES
~~~~~~~~~~~~~~~
-sS / -sT / -sA / -sW / -sM
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    TCP SYN, Connect(), ACK, Window, Maimon scans

-sU
^^^
    UDP Scan

-sN / -sF / -sX
^^^^^^^^^^^^^^^
    TCP Null, FIN, and Xmas scans

--scanflags <*flags*>
^^^^^^^^^^^^^^^^^^^^^
    Customize TCP scan flags

-sI <*zombie host[:probeport]*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Idle scan

-sY / -sZ
^^^^^^^^^
    SCTP INIT/COOKIE-ECHO scans

-sO
^^^
    IP protocol scan

-b <*FTP relay host*>
^^^^^^^^^^^^^^^^^^^^^
    FTP bounce scan

PORT SPECIFICATION AND SCAN ORDER
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-p <*port ranges*>
^^^^^^^^^^^^^^^^^^
    Only scan specified ports. 
    
    Ex: ``-p 22``; ``-p 1-65535``; ``-p U:53,111,137,T:21-25,80,139,8080,S:9``

--exclude-ports <*port ranges*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Exclude the specified ports from scanning

-F
^^^
    Fast mode - Scan fewer ports than the default scan

-r
^^^
    Scan ports consecutively - don't randomize

--top-ports <*number*>
^^^^^^^^^^^^^^^^^^^^^^
    Scan ``number`` most common ports

--port-ratio <*ratio*>
^^^^^^^^^^^^^^^^^^^^^^
    Scan ports more common than ``ratio``

SERVICE/VERSION DETECTION
~~~~~~~~~~~~~~~~~~~~~~~~~
-sV
^^^
    Probe open ports to determine service/version info

--version-intensity <*level*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Set from ``0 (light)`` to ``9 (try all probes)``

--version-light
^^^^^^^^^^^^^^^
    Limit to most likely probes (``intensity 2``)

--version-all
^^^^^^^^^^^^^
    Try every single probe (``intensity 9``)

--version-trace
^^^^^^^^^^^^^^^
    Show detailed version scan activity (for debugging)

SCRIPT SCAN
~~~~~~~~~~~
-sC
^^^
    equivalent to ``--script=default``

--script=<*Lua scripts*>
^^^^^^^^^^^^^^^^^^^^^^^^
    ``Lua scripts`` is a comma separated list of directories, script-files or script-categories

--script-args=<*n1=v1,[n2=v2,...]*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    provide arguments to scripts

--script-args-file=<*filename*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    provide NSE script args in a file

--script-trace
^^^^^^^^^^^^^^
    Show all data sent and received

--script-updatedb
^^^^^^^^^^^^^^^^^
    Update the script database.

--script-help=<*Lua scripts*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Show help about ``Lua scripts``.

OS DETECTION
~~~~~~~~~~~~
-O
^^^
    Enable OS detection

--osscan-limit
^^^^^^^^^^^^^^
    Limit OS detection to promising targets

--osscan-guess
^^^^^^^^^^^^^^
    Guess OS more aggressively

TIMING AND PERFORMANCE
~~~~~~~~~~~~~~~~~~~~~~
-T <*0-5*>
^^^^^^^^^^
    Set timing template (higher is faster)

--min-hostgroup/max-hostgroup <*size*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Parallel host scan group sizes

--min-parallelism / --max-parallelism <*numprobes*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Probe parallelization

--min-rtt-timeout / --max-rtt-timeout / --initial-rtt-timeout <*time*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Specifies probe round trip ``time``.

--max-retries <*tries*>
^^^^^^^^^^^^^^^^^^^^^^^
    Caps number of port scan probe retransmissions.

--host-timeout <*time*>
^^^^^^^^^^^^^^^^^^^^^^^
    Give up on target after this long

--scan-delay / --max-scan-delay <*time*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Adjust delay between probes

--min-rate <*number*>
^^^^^^^^^^^^^^^^^^^^^
    Send packets no slower than ``number`` per second

--max-rate <*number*>
^^^^^^^^^^^^^^^^^^^^^
    Send packets no faster than ``number`` per second


.. important::

    These options take ``time`` in seconds, or append ``ms (milliseconds)``, ``s (seconds)``, ``m (minutes)``, or ``h (hours)`` to the value (e.g. ``30m``).

FIREWALL/IDS EVASION AND SPOOFING
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-f / --mtu <*val*>
^^^^^^^^^^^^^^^^^^
    fragment packets (optionally w/given MTU)

-D <*decoy1,decoy2[,ME],...*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Cloak a scan with decoys

-S <*IP_Address*>
^^^^^^^^^^^^^^^^^
    Spoof ``source address``

-e <*iface*>
^^^^^^^^^^^^
    Use specified ``interface``

-g / --source-port <*portnum*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Use given ``port number``

--proxies <*url1,[url2],...*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Relay connections through HTTP/SOCKS4 proxies

--data <*hex string*>
^^^^^^^^^^^^^^^^^^^^^
    Append a custom payload to sent packets

--data-string <*string*>
^^^^^^^^^^^^^^^^^^^^^^^^
    Append a custom ``ASCII string`` to sent packets

--data-length <*num*>
^^^^^^^^^^^^^^^^^^^^^
    Append random data to sent packets

--ip-options <*options*>
^^^^^^^^^^^^^^^^^^^^^^^^
    Send packets with specified ip options

--ttl <*val*>
^^^^^^^^^^^^^
    Set IP ``time-to-live`` field

--spoof-mac <*mac address / prefix / vendor name*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Spoof your ``MAC address``

--badsum
^^^^^^^^
    Send packets with a bogus ``TCP`` / ``UDP`` / ``SCTP`` checksum

OUTPUT
~~~~~~
-oN / -oX / -oS / -oG <*file*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    Output scan in normal, XML, s|<rIpt kIddi3, and Grepable format, respectively, to the given filename.

-oA <*basename*>
^^^^^^^^^^^^^^^^
    Output in the three major formats at once

-v
^^^
    Increase verbosity level (use ``-vv`` or more for greater effect)

-d
^^^
    Increase debugging level (use ``-dd`` or more for greater effect)

--reason
^^^^^^^^
    Display the reason a port is in a particular state

--open
^^^^^^
    Only show open (or possibly open) ports

--packet-trace
^^^^^^^^^^^^^^
    Show all packets sent and received

--iflist
^^^^^^^^
    Print host interfaces and routes (for debugging)

--append-output
^^^^^^^^^^^^^^^
    Append to rather than clobber specified output files

--resume <*filename*>
^^^^^^^^^^^^^^^^^^^^^
    Resume an aborted scan

--noninteractive
^^^^^^^^^^^^^^^^
    Disable runtime interactions via keyboard

--stylesheet <*path / URL*>
^^^^^^^^^^^^^^^^^^^^^^^^^^^
    XSL stylesheet to transform XML output to HTML

--webxml
^^^^^^^^
    Reference stylesheet from Nmap.Org for more portable XML

--no-stylesheet
^^^^^^^^^^^^^^^
    Prevent associating of XSL stylesheet w/XML output

MISC
~~~~
-6
^^^
    Enable IPv6 scanning

-A
^^^
    Enable OS detection, version detection, script scanning, and traceroute

--datadir <*dirname*>
^^^^^^^^^^^^^^^^^^^^^
    Specify custom Nmap data file location

--send-eth / --send-ip
^^^^^^^^^^^^^^^^^^^^^^
    Send using raw ethernet frames or IP packets

--privileged
^^^^^^^^^^^^
    Assume that the user is fully privileged

--unprivileged
^^^^^^^^^^^^^^
    Assume the user lacks raw socket privileges

-V
^^^
    Print version number

-h
^^^
    Print this help summary page.


.. _Nmap: https://nmap.org/book/man.html