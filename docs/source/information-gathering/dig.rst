.. _digpage:

Dig
===
dig_ (Domain Information Groper) is a Linux command line utility that **performs DNS lookup by querying name servers** and displaying the result to you.

.. note::
    
    dig_ is similar to :ref:`nslookup <nslookuppage>`. Their main function is to query DNS records from a DNS Server.

    :ref:`nslookup <nslookuppage>` is somewhat easier to use, while dig_'s output is easier to parse in scripts or commands.

Usage
-----
.. code-block:: console

    dig [SERVER] [NAME] [RECORD TYPE]

Example
-------
A simple way to check for the **A Record** of `kompas.com <https://www.kompas.com>`_:

.. code-block:: console

    dig kompas.com

.. code-block:: console

    > dig kompas.com

    ; <<>> DiG 9.16.1-Ubuntu <<>> kompas.com
    ;; global options: +cmd
    ;; Got answer:
    ;; ->>HEADER<<- opcode: QUERY, status: NOERROR, id: 9320
    ;; flags: qr rd ra; QUERY: 1, ANSWER: 2, AUTHORITY: 0, ADDITIONAL: 1

    ;; OPT PSEUDOSECTION:
    ; EDNS: version: 0, flags:; udp: 65494
    ;; QUESTION SECTION:
    ;kompas.com.                    IN      A

    ;; ANSWER SECTION:
    kompas.com.             5       IN      A       18.142.37.27
    kompas.com.             5       IN      A       18.138.194.144

    ;; Query time: 75 msec
    ;; SERVER: 127.0.0.53#53(127.0.0.53)
    ;; WHEN: Tue Jun 07 23:12:57 EDT 2022
    ;; MSG SIZE  rcvd: 71

Options
-------

-4
~~~
    Use IPv4 only.

-6
~~~
    Use IPv6 only.

-b <*address[#port]*>
~~~~~~~~~~~~~~~~~~~~~
    Set the source IP address of the query.
    The address must be a valid address on one of the host's network interfaces, or ``0.0.0.0`` or ``::``.
    An optional port may be specified by appending "#<port>"

-c <*class*>
~~~~~~~~~~~~
    Set the query class.
    The default class is ``IN``; other classes are ``HS`` for Hesiod records or ``CH`` for Chaosnet records.

-f <*file*>
~~~~~~~~~~~
    Batch mode: dig reads a list of lookup requests to process from the given file.
    Each line in the file should be organized in the same way they would be presented as queries to dig using the command-line interface.

.. _digkoption:

-k <*keyfile*>
~~~~~~~~~~~~~~
    Sign queries using TSIG_ using a key read from the given file.
    Key files can be generated using `tsig-keygen <https://manpages.debian.org/testing/bind9/tsig-keygen.8.en.html>`_.

    .. important::

        When using TSIG_ authentication with dig, the name server that is queried needs to know the key and algorithm that is being used.
        In BIND, this is done by providing appropriate key and server statements in named.conf.

-m
~~~
    Enable memory usage debugging.

-p <*port*>
~~~~~~~~~~~
    Send the query to a non-standard port on the server, instead of the default ``port 53``.
    This option would be used to test a name server that has been configured to listen for queries on a non-standard port number.

-q <*name*>
~~~~~~~~~~~
    The domain name to query.
    This is useful to distinguish the name from other arguments.

-r
~~~
    Do not read options from ``${HOME}/.digrc``.
    This is useful for scripts that need predictable behaviour.

-t <*type*>
~~~~~~~~~~~
    The resource record type to query.
    It can be any valid query type.
    If it is a resource record type supported in BIND 9, it can be given by the type mnemonic (such as ``NS`` or ``AAAA``).
    The default query type is ``A``, unless the :ref:`-x<digxoption>` option is supplied to indicate a reverse lookup.
    A zone transfer can be requested by specifying a type of AXFR_.
    When an incremental zone transfer IXFR_ is required, set the type to ``ixfr=N``.
    The incremental zone transfer will contain the changes made to the zone since the serial number in the zone's SOA record was ``N``.

    All resource record types can be expressed as ``TYPEnn``, where ``nn`` is the number of the type.
    If the resource record type is not supported in BIND 9, the result will be displayed as described in `RFC 3597 <https://datatracker.ietf.org/doc/html/rfc3597>`_.

-u
~~~
    Print query times in microseconds instead of milliseconds.

-v
~~~
    Print the version number and exit.

.. _digxoption:

-x <*addr*>
~~~~~~~~~~~
    Simplified reverse lookups, for mapping addresses to names.
    The addr is an IPv4 address in dotted-decimal notation, or a colon-delimited IPv6 address.
    When the :ref:`-x<digxoption>` is used, there is no need to provide the name, class and type arguments.
    dig automatically performs a lookup for a name like ``94.2.0.192.in-addr.arpa`` and sets the query type and class to ``PTR`` and ``IN`` respectively.
    IPv6 addresses are looked up using nibble format under the ``IP6.ARPA`` domain.

.. _digyoption:

-y <*[hmac:]keyname:secret*>
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

    Sign queries using TSIG_ with the given authentication key.
    ``keyname`` is the name of the key, and ``secret`` is the base64 encoded shared secret.
    ``hmac`` is the name of the key algorithm; valid choices are ``hmac-md5``, ``hmac-sha1``, ``hmac-sha224``, ``hmac-sha256``, ``hmac-sha384``, or ``hmac-sha512``.
    If ``hmac`` is not specified, the default is ``hmac-md5``, or if MD5 was disabled, ``hmac-sha256``.

    .. note::

        You should use the :ref:`-k<digkoption>` option and avoid the :ref:`-y<digyoption>` option, because with :ref:`-y<digyoption>` the shared secret is supplied as a command line argument in clear text.
        This may be visible in the output from `ps <https://man7.org/linux/man-pages/man1/ps.1.html>`_ or in a history file maintained by the user's shell.

Query Options
-------------
dig_ provides a number of query options which affect the way in which lookups are made and the results displayed.
Some of these set or reset flag bits in the query header, some determine which sections of the answer get printed, and others determine the timeout and retry strategies.

Each query option is identified by a keyword preceded by a plus sign ``+``.
Some keywords set or reset an option.
These may be preceded by the string no to negate the meaning of that keyword.
Other keywords assign values to options like the timeout interval.
They have the form ``+keyword=value``. The query options are:

+[no]tcp
~~~~~~~~
    Use [do not use] TCP when querying name servers.
    The default behavior is to use UDP unless an AXFR_ or IXFR_ query is requested, in which case a TCP connection is used. 

+[no]vc
~~~~~~~
    Use [do not use] TCP when querying name servers.
    This alternate syntax to +[no]tcp is provided for backwards compatibility.
    The ``vc`` stands for ``virtual circuit``. 

+[no]ignore
~~~~~~~~~~~
    Ignore truncation in UDP responses instead of retrying with TCP. 
    By default, TCP retries are performed.

+domain=<*somename*>
~~~~~~~~~~~~~~~~~~~~
    Set the search list to contain the single domain somename, as if specified in a domain directive in ``/etc/resolv.conf``, and enable search list processing as if the :ref:`+search<digsearchoption>` option were given. 

.. _digsearchoption:

+[no]search
~~~~~~~~~~~
    Use [do not use] the search list defined by the searchlist or domain directive in ``resolv.conf`` (if any).
    The search list is not used by default. 

+[no]showsearch
~~~~~~~~~~~~~~~
    Perform [do not perform] a search showing intermediate results. 

+[no]defname
~~~~~~~~~~~~
    **DEPRECATED**: treated as a synonym for :ref:`+[no]search<digsearchoption>`

.. _digaaonlyoption:

+[no]aaonly
~~~~~~~~~~~
    Sets the ``aa`` flag in the query. 

+[no]aaflag
~~~~~~~~~~~
    A synonym for :ref:`+[no]aaonly<digaaonlyoption>`.

+[no]adflag
~~~~~~~~~~~
    Set [do not set] the ``AD`` (authentic data) bit in the query.
    This requests the server to return whether all of the answer and authority sections have all been validated as secure according to the security policy of the server.
    ``AD=1`` indicates that all records have been validated as secure and the answer is not from a OPT-OUT range.
    ``AD=0`` indicate that some part of the answer was insecure or not validated. 

+[no]cdflag
~~~~~~~~~~~
    Set [do not set] the ``CD`` (checking disabled) bit in the query.
    This requests the server to not perform DNSSEC validation of responses. 

+[no]cl
~~~~~~~
    Display [do not display] the ``CLASS`` when printing the record. 

+[no]ttlid
~~~~~~~~~~
    Display [do not display] the ``TTL`` when printing the record. 

+[no]recurse
~~~~~~~~~~~~
    Toggle the setting of the ``RD`` (recursion desired) bit in the query.
    This bit is set by default, which means dig normally sends recursive queries.
    Recursion is automatically disabled when the :ref:`+nssearch<dignssearchoption>` or :ref:`+trace<digtraceoption>` query options are used. 

.. _dignssearchoption:

+[no]nssearch
~~~~~~~~~~~~~
    When this option is set, dig attempts to find the authoritative name servers for the zone containing the name being looked up and display the SOA record that each name server has for the zone. 

.. _digtraceoption:

+[no]trace
~~~~~~~~~~
    Toggle tracing of the delegation path from the root name servers for the name being looked up.
    Tracing is disabled by default.
    When tracing is enabled, dig makes iterative queries to resolve the name being looked up.
    It will follow referrals from the root servers, showing the answer from each server that was used to resolve the lookup. 

+[no]cmd
~~~~~~~~
    Toggles the printing of the initial comment in the output identifying the version of dig and the query options that have been applied.
    This comment is printed by default. 

.. _digshortoption:

+[no]short
~~~~~~~~~~
    Provide a terse answer.
    The default is to print the answer in a verbose form. 

+[no]identify
~~~~~~~~~~~~~
    Show [or do not show] the IP address and port number that supplied the answer when the :ref:`+short<digshortoption>` option is enabled.
    If short form answers are requested, the default is not to show the source address and port number of the server that provided the answer. 

+[no]comments
~~~~~~~~~~~~~
    Toggle the display of comment lines in the output.
    The default is to print comments. 

+[no]stats
~~~~~~~~~~
    This query option toggles the printing of statistics: when the query was made, the size of the reply and so on.
    The default behavior is to print the query statistics. 

+[no]qr
~~~~~~~
    Print [do not print] the query as it is sent.
    By default, the query is not printed. 

+[no]question
~~~~~~~~~~~~~
    Print [do not print] the question section of a query when an answer is returned.
    The default is to print the question section as a comment. 

+[no]answer
~~~~~~~~~~~
    Display [do not display] the answer section of a reply.
    The default is to display it. 

+[no]authority
~~~~~~~~~~~~~~
    Display [do not display] the authority section of a reply.
    The default is to display it. 

+[no]additional
~~~~~~~~~~~~~~~
    Display [do not display] the additional section of a reply.
    The default is to display it. 

+[no]all
~~~~~~~~
    Set or clear all display flags. 

+time=<*T*>
~~~~~~~~~~~
    Sets the timeout for a query to ``T`` seconds.
    The default timeout is ``5 seconds``.
    An attempt to set ``T`` to less than ``1`` will result in a query timeout of ``1 second`` being applied. 

.. _digtriesoption:

+tries=<*T*>
~~~~~~~~~~~~
    Sets the number of times to try UDP queries to server to ``T`` instead of the default, ``3``.
    If ``T`` is less than or equal to ``zero``, the number of tries is silently rounded up to ``1``. 

+retry=<*T*>
~~~~~~~~~~~~
    Sets the number of times to retry UDP queries to server to ``T`` instead of the default, ``2``.
    Unlike :ref:`+tries<digtriesoption>`, this does not include the initial query. 

+ndots=<*D*>
~~~~~~~~~~~~
    Set the number of dots that have to appear in name to ``D`` for it to be considered absolute.
    The default value is that defined using the ``ndots`` statement in ``/etc/resolv.conf``, or ``1`` if no ``ndots`` statement is present.
    Names with fewer dots are interpreted as relative names and will be searched for in the domains listed in the search or domain directive in ``/etc/resolv.conf``. 

+bufsize=<*B*>
~~~~~~~~~~~~~~
    Set the UDP message buffer size advertised using EDNS_ to ``B`` bytes.
    The maximum and minimum sizes of this buffer are ``65535`` and ``0`` respectively.
    Values outside this range are rounded up or down appropriately.
    Values other than zero will cause a ``EDNS`` query to be sent. 

+edns=<*version*>
~~~~~~~~~~~~~~~~~
    Specify the EDNS_ version to query with.
    Valid values are ``0`` to ``255``.
    Setting the EDNS_ version will cause a EDNS_ query to be sent.
    ``+noedns`` clears the remembered EDNS version. 

+[no]multiline
~~~~~~~~~~~~~~
    Print records like the SOA records in a verbose multi-line format with human-readable comments.
    The default is to print each record on a single line, to facilitate machine parsing of the dig output. 

+[no]onesoa
~~~~~~~~~~~
    Print only one (starting) SOA record when performing an AXFR_.
    The default is to print both the starting and ending SOA records. 

+[no]fail
~~~~~~~~~
    Do not try the next server if you receive a ``SERVFAIL``.
    The default is to not try the next server which is the reverse of normal stub resolver behavior. 

+[no]besteffort
~~~~~~~~~~~~~~~
    Attempt to display the contents of messages which are malformed.
    The default is to not display malformed answers. 

+[no]dnssec
~~~~~~~~~~~
    Requests DNSSEC records be sent by setting the ``DNSSEC OK`` bit ``(DO)`` in the OPT record in the additional section of the query. 

.. _digsigchaseoption:

+[no]sigchase
~~~~~~~~~~~~~
    Chase DNSSEC signature chains.

    **Requires dig be compiled with** ``-DDIG_SIGCHASE``.

+trusted-key=<*key*>
~~~~~~~~~~~~~~~~~~~~~
    Specifies a file containing trusted keys to be used with :ref:`+sigchase<digsigchaseoption>`.
    Each DNSKEY record must be on its own line.

    If not specified, dig will look for ``/etc/trusted-key.key`` then ``trusted-key.key`` in the current directory.

    **Requires dig be compiled with** ``-DDIG_SIGCHASE``.

+[no]topdown
~~~~~~~~~~~~
    When chasing DNSSEC signature chains perform a top-down validation.

    **Requires dig be compiled with** ``-DDIG_SIGCHASE``. 

+[no]nsid
~~~~~~~~~
    Include an EDNS_ ``name server ID`` request when sending a query. 

.. _dig: https://linux.die.net/man/1/
.. _TSIG: https://datatracker.ietf.org/doc/html/rfc2845
.. _AXFR: https://datatracker.ietf.org/doc/html/rfc5936
.. _IXFR: https://datatracker.ietf.org/doc/html/rfc1995
.. _EDNS: https://datatracker.ietf.org/doc/html/rfc6891