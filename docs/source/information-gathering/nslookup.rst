.. _nslookuppage:

Nslookup
========
nslookup_ is a tool used to **query records from a** `domain name system (DNS) <https://www.cloudflare.com/learning/dns/what-is-dns/>`_.

Using nslookup_, we can look for information, such as:

- IP Address of a hostname
- Hostname of an IP Adderess (also called 'reverse DNS Lookup')
- All records of a DNS server

nslookup_ is used to troubleshoot server connections or for security reasons.
Such reasons include guard against phishing attacks, in which a domain name is altered.
For example, by substituting the numeral ``1`` for a lowercase ``l``, to make an unfriendly site look friendly and familiar (joes1owerprices.com vs. joeslowerprices.com).

.. _nslookup: https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/nslookup

Usage
-----
To query singular data, you can use nslookup_ **non-interactive mode**, by directly supplying the commands.

.. code-block:: bash

    nslookup [commands]

If you need to query multiple times, you can use nslookup_'s **interactive mode**.

.. code-block:: bash

    nslookup 

Example
-------

A simple way to check for the "A Record" of `kompas.com <https://www.kompas.com>`_:

.. code-block:: console

    nslookup kompas.com

.. code-block:: console

    > nslookup kompas.com

    Server:  vsydo-bndisitu.binus.local
    Address:  10.200.200.201

    Non-authoritative answer:
    Name:    kompas.com
    Addresses:  18.142.37.27
            18.140.206.113

In the above output, ``server`` refers to the **IP address of the DNS server**.
Then the below section provides the "A Record" (IP Address) of the domain "`kompas.com <https://www.kompas.com>`_".

To check for **Mail Exchange (MX) records** of `kompas.com <https://www.kompas.com>`_:

.. code-block:: console

    nslookup -type=mx kompas.com

.. code-block:: console

    > nslookup -type=mx kompas.com

    Server:  vsydo-bndisitu.binus.local
    Address:  10.200.200.201

    Non-authoritative answer:
    kompas.com      MX preference = 0, mail exchanger = kompas-com.mail.protection.outlook.com

In the above example, we have 1 MX record for the domain "`kompas.com <https://www.kompas.com>`_".

The number ``0``, associated with the MX records tells the **preference of mail server**.
The lower the number, the higher the preference.
So when a mail is sent to "`kompas.com <https://www.kompas.com>`_", first preference will be "kompas-com.mail.protection.outlook.com", then the others, if exists.

.. note::

    You may also noticed the keyword "Non-Authoritative Answer" in the above output.

    Any answer that originates from the DNS Server which has the complete zone file information available for the domain is said to be **Authoritative Answer**.

    In many cases, DNS servers will not have the complete zone file information available for a given domain.
    Instead, it maintains a cache file which has the results of all queries performed in the past for which it has gotten authoritative response.
    When a DNS query is given, it searches the cache file, and return the information available as **Non-Authoritative Answer**.

Commands
--------------------

help or ?
~~~~~~~~~
    Print info on common commands

<*NAME*>
~~~~~~~~
    Print info about the host/domain NAME using default server

<*NAME1*> <*NAME2*>
~~~~~~~~~~~~~~~~~~~
    As above, but use NAME2 as server

set <*OPTION*>
~~~~~~~~~~~~~~
    Sets a default option

server <*NAME*>
~~~~~~~~~~~~~~~
    Set default server to NAME, using current default server

lserver <*NAME*>
~~~~~~~~~~~~~~~~
    Set default server to NAME, using initial server

root
~~~~
    Set current default server to the root

ls [opt] *DOMAIN* [> *FILE*]
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    List addresses in DOMAIN (optional: output to FILE).
    The available options are:

    -a          - list canonical names and aliases
    -d          - list all records
    -t TYPE     - list records of the given RFC record type (ex. A,CNAME,MX,NS,PTR etc.)

view <*FILE*>
~~~~~~~~~~~~~
    Sort an 'ls' output file and view it with pg

exit
~~~~
    Exit the program

Available Options
-----------------
These are the available options for both **non-interactive mode** and **interactive** ``set OPTION``.

all
~~~
    Print options, current server and host

[no]debug
~~~~~~~~~
    Print debugging information

[no]d2
~~~~~~
    Print exhaustive debugging information

[no]defname
~~~~~~~~~~~
    append domain name to each query

[no]recurse
~~~~~~~~~~~
    ask for recursive answer to query

[no]search
~~~~~~~~~~
    use domain search list

[no]vc
~~~~~~
    always use a virtual circuit

domain=<*NAME*>
~~~~~~~~~~~~~~~
    set default domain name to NAME

srchlist=N1[/N2/.../N6]
~~~~~~~~~~~~~~~~~~~~~~~
    set domain to N1 and search list to N1,N2, etc.

root=<*NAME*>
~~~~~~~~~~~~~
    set root server to NAME

retry=<*X*>
~~~~~~~~~~~
    set number of retries to X

timeout=<*X*>
~~~~~~~~~~~~~
    set initial time-out interval to X seconds

type=<*X*>
~~~~~~~~~~
    set query type (ex. A,AAAA,A+AAAA,ANY,CNAME,MX,NS,PTR,SOA,SRV)

querytype=<*X*>
~~~~~~~~~~~~~~~
    same as type

class=<*X*>
~~~~~~~~~~~
    set query class (ex. IN (Internet), ANY)

[no]msxfr
~~~~~~~~~
    use MS fast zone transfer

ixfrver=<*X*>
~~~~~~~~~~~~~
    current version to use in IXFR transfer request